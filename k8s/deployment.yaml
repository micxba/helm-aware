apiVersion: apps/v1
kind: Deployment
metadata:
  name: helm-aware
  namespace: helm-aware
  labels:
    app: helm-aware
spec:
  replicas: 1
  selector:
    matchLabels:
      app: helm-aware
  template:
    metadata:
      labels:
        app: helm-aware
    spec:
      serviceAccountName: helm-aware
      containers:
      - name: helm-aware
        image: helm-aware:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
          name: http
        env:
        - name: HOST
          valueFrom:
            configMapKeyRef:
              name: helm-aware-config
              key: HOST
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: helm-aware-config
              key: PORT
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: helm-aware-config
              key: DEBUG
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: helm-aware-config
              key: LOG_LEVEL
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000 